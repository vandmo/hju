name: Release

on:
  push:
    tags:
    - 'v*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Generate internal/buildinfo.go
      uses: actions/github-script@v4
      with:
        script: |
          const fs = require('fs')
          const tag = context.ref.substring(10)
          const no_v = tag.replace('v', '')
          const now = new Date()
          let buildinfo = ''
          buildinfo += 'package internal\n\n'
          buildinfo += 'const (\n'
          buildinfo += '\t'+`version = "${no_v}"`+'\n'
          buildinfo += '\t'+`date    = "${now.toISOString()}"`+'\n'
          buildinfo += '\t'+`builder = "${context.actor}"`+'\n'
          buildinfo += '\t'+`commit  = "${context.sha}"`+'\n'
          buildinfo += ')\n'
          fs.writeFileSync('internal/buildinfo.go', buildinfo)

    - name: Inspect internal/buildinfo.go
      run: cat internal/buildinfo.go

    - name: Commit internal/buildinfo.go
      run: git add internal/buildinfo.go && git commit -m"Add internal/buildinfo.go"

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        distribution: goreleaser
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish .deb and .rpm to Gemfury
      env:
        GEMFURY_PUSH_TOKEN: ${{ secrets.GEMFURY_PUSH_TOKEN }}
      run: |
        for filename in dist/*.{deb,rpm}; do
          curl --form package=@"$filename"  https://{$GEMFURY_PUSH_TOKEN}@push.fury.io/bztk/
        done
